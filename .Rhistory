for (sp in species) {
print('')
print('********************')
print('Running:')
print(sp)
df = subset(ht, species == sp)
#Set up null model with only an intercept
null_model = lm('total_biomass_log ~ 1', data = df)
#Set up model with treatment as factor
model = lm('total_biomass_log ~ treatment', data = df)
#plot(model)
#Print model results
aic = as.data.frame(compare_performance(null_model, model))
print(aic)
print(summary(model))
#Capture AIC results
aic$species = sp
aic_ls_ht = rbind(aic_ls_ht, aic)
#Shapiro-Wilk test for testing if residuals are normally distributed
sw = shapiro.test(model[['residuals']])
#Do post-hoc test
ph = summary(glht(model, linfct = mcp(treatment='Tukey')))
print(ph)
g = ggpredict(model, terms = 'treatment')
#Capture posthoc test
phdf = as.data.frame(ph$test$coefficients)
phdf = cbind(coefficients = ph$test$coefficients, phdf)
phdf = cbind(comparison = rownames(phdf), phdf)
phdf = cbind(tstat = ph$test$tstat, phdf)
phdf = cbind(stderr = ph$test$sigma, phdf)
phdf = cbind(pvalues = ph$test$pvalues, phdf)
phdf$species = sp
ph_ls_ht = c(ph_ls_ht, list(phdf))
#Save figure of predicted biomass by treatment
g = ggpredict(model, terms = 'treatment')
plot(g) + labs(title = paste0(sp,' Predicted Biomass By Treatment'))
ggsave(paste0('./figures/',sp,'_predicted_bmass.jpg'), width=12, height=10)
#Create dataframe from the results and append to list
cfs = as.data.frame(summary(model)$coefficients)
cfs = cbind(parameter = rownames(cfs), cfs)
cfs$species = sp
df_ls_ht = c(df_ls_ht, list(cfs))
print(sw)
#Plot test on residuals and save
png(filename=sprintf('./figures/%s_residuals_check.jpg',sp), width=12, height=10)
cm = check_model(model)
plot(cm)
dev.off()
}
install.packages(c("lme4", "lmer", "lmerTest", "emmeans", "Matrix", "AICcmodavg", "dplyr", "performance", "broom.mixed", "pbkrtest", "multcomp", "ggeffects", "MuMIn", "data.tables"))
install.packages(c('lme4','lmer','lmerTest','emmeans','Matrix','AICcmodavg','dplyr',
'performance','broom.mixed','pbkrtest','multcomp','ggeffects','MuMIn','data.tables'))
setwd("C:/Users/sfari/OneDrive/Documents/GitHub/co2_growth_experiment")
library(lmerTest)
library(AICcmodavg)
library(broom.mixed)
library(performance)
library(emmeans)
library(multcomp)
library(ggeffects)
library(ggplot2)
library(MuMIn)
library(data.table)
library(dplyr)
library(performance)
## NOTE: AIC models must be fit using ML method
#Import data for herbs
ht  = read.csv('./data/herb_transplants_model_rdy.csv')
ht['total_biomass_log'] = log10(ht['total_biomass'])
#Run model for each species
species = c('MIGU','NAOF','POMO','VEAN')
#species = c('NAOF')
ht[,'treatment'] <- as.factor(ht[,'treatment'])
#Lists to catch all the model results dfs
df_ls_ht = list()
aic_ls_ht = list()
ph_ls_ht = list()
for (sp in species) {
print('')
print('********************')
print('Running:')
print(sp)
df = subset(ht, species == sp)
#Set up null model with only an intercept
null_model = lm('total_biomass_log ~ 1', data = df)
#Set up model with treatment as factor
model = lm('total_biomass_log ~ treatment', data = df)
#plot(model)
#Print model results
aic = as.data.frame(compare_performance(null_model, model))
print(aic)
print(summary(model))
#Capture AIC results
aic$species = sp
aic_ls_ht = rbind(aic_ls_ht, aic)
#Shapiro-Wilk test for testing if residuals are normally distributed
sw = shapiro.test(model[['residuals']])
#Do post-hoc test
ph = summary(glht(model, linfct = mcp(treatment='Tukey')))
print(ph)
g = ggpredict(model, terms = 'treatment')
#Capture posthoc test
phdf = as.data.frame(ph$test$coefficients)
phdf = cbind(coefficients = ph$test$coefficients, phdf)
phdf = cbind(comparison = rownames(phdf), phdf)
phdf = cbind(tstat = ph$test$tstat, phdf)
phdf = cbind(stderr = ph$test$sigma, phdf)
phdf = cbind(pvalues = ph$test$pvalues, phdf)
phdf$species = sp
ph_ls_ht = c(ph_ls_ht, list(phdf))
#Save figure of predicted biomass by treatment
g = ggpredict(model, terms = 'treatment')
plot(g) + labs(title = paste0(sp,' Predicted Biomass By Treatment'))
ggsave(paste0('./figures/',sp,'_predicted_bmass.jpg'), width=12, height=10)
#Create dataframe from the results and append to list
cfs = as.data.frame(summary(model)$coefficients)
cfs = cbind(parameter = rownames(cfs), cfs)
cfs$species = sp
df_ls_ht = c(df_ls_ht, list(cfs))
print(sw)
#Plot test on residuals and save
png(filename=sprintf('./figures/%s_residuals_check.jpg',sp), width=600, height=400)
cm = check_model(model)
plot(cm)
dev.off()
}
install.packages(c("lme4", "lmer", "lmerTest", "emmeans", "Matrix", "AICcmodavg", "dplyr", "performance", "broom.mixed", "pbkrtest", "multcomp", "ggeffects", "MuMIn", "data.tables"))
install.packages(c('lme4','lmer','lmerTest','emmeans','Matrix','AICcmodavg','dplyr',
'performance','broom.mixed','pbkrtest','multcomp','ggeffects','MuMIn','data.tables'))
setwd("C:/Users/sfari/OneDrive/Documents/GitHub/co2_growth_experiment")
library(lmerTest)
library(AICcmodavg)
library(broom.mixed)
library(performance)
library(emmeans)
library(multcomp)
library(ggeffects)
library(ggplot2)
library(MuMIn)
library(data.table)
library(dplyr)
library(performance)
## NOTE: AIC models must be fit using ML method
#Import data for herbs
ht  = read.csv('./data/herb_transplants_model_rdy.csv')
ht['total_biomass_log'] = log10(ht['total_biomass'])
#Run model for each species
species = c('MIGU','NAOF','POMO','VEAN')
#species = c('NAOF')
ht[,'treatment'] <- as.factor(ht[,'treatment'])
#Lists to catch all the model results dfs
df_ls_ht = list()
aic_ls_ht = list()
ph_ls_ht = list()
for (sp in species) {
print('')
print('********************')
print('Running:')
print(sp)
df = subset(ht, species == sp)
#Set up null model with only an intercept
null_model = lm('total_biomass_log ~ 1', data = df)
#Set up model with treatment as factor
model = lm('total_biomass_log ~ treatment', data = df)
#plot(model)
#Print model results
aic = as.data.frame(compare_performance(null_model, model))
print(aic)
print(summary(model))
#Capture AIC results
aic$species = sp
aic_ls_ht = rbind(aic_ls_ht, aic)
#Shapiro-Wilk test for testing if residuals are normally distributed
sw = shapiro.test(model[['residuals']])
#Do post-hoc test
ph = summary(glht(model, linfct = mcp(treatment='Tukey')))
print(ph)
g = ggpredict(model, terms = 'treatment')
#Capture posthoc test
phdf = as.data.frame(ph$test$coefficients)
phdf = cbind(coefficients = ph$test$coefficients, phdf)
phdf = cbind(comparison = rownames(phdf), phdf)
phdf = cbind(tstat = ph$test$tstat, phdf)
phdf = cbind(stderr = ph$test$sigma, phdf)
phdf = cbind(pvalues = ph$test$pvalues, phdf)
phdf$species = sp
ph_ls_ht = c(ph_ls_ht, list(phdf))
#Save figure of predicted biomass by treatment
g = ggpredict(model, terms = 'treatment')
plot(g) + labs(title = paste0(sp,' Predicted Biomass By Treatment'))
ggsave(paste0('./figures/',sp,'_predicted_bmass.jpg'), width=12, height=10)
#Create dataframe from the results and append to list
cfs = as.data.frame(summary(model)$coefficients)
cfs = cbind(parameter = rownames(cfs), cfs)
cfs$species = sp
df_ls_ht = c(df_ls_ht, list(cfs))
print(sw)
#Plot test on residuals and save
png(filename=sprintf('./figures/%s_residuals_check.jpg',sp), width=600, height=500)
cm = check_model(model)
plot(cm)
dev.off()
}
install.packages(c("lme4", "lmer", "lmerTest", "emmeans", "Matrix", "AICcmodavg", "dplyr", "performance", "broom.mixed", "pbkrtest", "multcomp", "ggeffects", "MuMIn", "data.tables"))
install.packages(c('lme4','lmer','lmerTest','emmeans','Matrix','AICcmodavg','dplyr',
'performance','broom.mixed','pbkrtest','multcomp','ggeffects','MuMIn','data.tables'))
setwd("C:/Users/sfari/OneDrive/Documents/GitHub/co2_growth_experiment")
library(lmerTest)
library(AICcmodavg)
library(broom.mixed)
library(performance)
library(emmeans)
library(multcomp)
library(ggeffects)
library(ggplot2)
library(MuMIn)
library(data.table)
library(dplyr)
library(performance)
## NOTE: AIC models must be fit using ML method
#Import data for herbs
ht  = read.csv('./data/herb_transplants_model_rdy.csv')
ht['total_biomass_log'] = log10(ht['total_biomass'])
#Run model for each species
species = c('MIGU','NAOF','POMO','VEAN')
#species = c('NAOF')
ht[,'treatment'] <- as.factor(ht[,'treatment'])
#Lists to catch all the model results dfs
df_ls_ht = list()
aic_ls_ht = list()
ph_ls_ht = list()
for (sp in species) {
print('')
print('********************')
print('Running:')
print(sp)
df = subset(ht, species == sp)
#Set up null model with only an intercept
null_model = lm('total_biomass_log ~ 1', data = df)
#Set up model with treatment as factor
model = lm('total_biomass_log ~ treatment', data = df)
#plot(model)
#Print model results
aic = as.data.frame(compare_performance(null_model, model))
print(aic)
print(summary(model))
#Capture AIC results
aic$species = sp
aic_ls_ht = rbind(aic_ls_ht, aic)
#Shapiro-Wilk test for testing if residuals are normally distributed
sw = shapiro.test(model[['residuals']])
#Do post-hoc test
ph = summary(glht(model, linfct = mcp(treatment='Tukey')))
print(ph)
g = ggpredict(model, terms = 'treatment')
#Capture posthoc test
phdf = as.data.frame(ph$test$coefficients)
phdf = cbind(coefficients = ph$test$coefficients, phdf)
phdf = cbind(comparison = rownames(phdf), phdf)
phdf = cbind(tstat = ph$test$tstat, phdf)
phdf = cbind(stderr = ph$test$sigma, phdf)
phdf = cbind(pvalues = ph$test$pvalues, phdf)
phdf$species = sp
ph_ls_ht = c(ph_ls_ht, list(phdf))
#Save figure of predicted biomass by treatment
g = ggpredict(model, terms = 'treatment')
plot(g) + labs(title = paste0(sp,' Predicted Biomass By Treatment'))
ggsave(paste0('./figures/',sp,'_predicted_bmass.jpg'), width=12, height=10)
#Create dataframe from the results and append to list
cfs = as.data.frame(summary(model)$coefficients)
cfs = cbind(parameter = rownames(cfs), cfs)
cfs$species = sp
df_ls_ht = c(df_ls_ht, list(cfs))
print(sw)
#Plot test on residuals and save
png(filename=sprintf('./figures/%s_residuals_check.jpg',sp), width=700, height=500)
cm = check_model(model)
plot(cm)
dev.off()
}
install.packages(c("lme4", "lmer", "lmerTest", "emmeans", "Matrix", "AICcmodavg", "dplyr", "performance", "broom.mixed", "pbkrtest", "multcomp", "ggeffects", "MuMIn", "data.tables"))
install.packages(c('lme4','lmer','lmerTest','emmeans','Matrix','AICcmodavg','dplyr',
'performance','broom.mixed','pbkrtest','multcomp','ggeffects','MuMIn','data.tables'))
setwd("C:/Users/sfari/OneDrive/Documents/GitHub/co2_growth_experiment")
library(lmerTest)
library(AICcmodavg)
library(broom.mixed)
library(performance)
library(emmeans)
library(multcomp)
library(ggeffects)
library(ggplot2)
library(MuMIn)
library(data.table)
library(dplyr)
library(performance)
## NOTE: AIC models must be fit using ML method
#Import data for herbs
ht  = read.csv('./data/herb_transplants_model_rdy.csv')
ht['total_biomass_log'] = log10(ht['total_biomass'])
#Run model for each species
species = c('MIGU','NAOF','POMO','VEAN')
#species = c('NAOF')
ht[,'treatment'] <- as.factor(ht[,'treatment'])
#Lists to catch all the model results dfs
df_ls_ht = list()
aic_ls_ht = list()
ph_ls_ht = list()
for (sp in species) {
print('')
print('********************')
print('Running:')
print(sp)
df = subset(ht, species == sp)
#Set up null model with only an intercept
null_model = lm('total_biomass_log ~ 1', data = df)
#Set up model with treatment as factor
model = lm('total_biomass_log ~ treatment', data = df)
#plot(model)
#Print model results
aic = as.data.frame(compare_performance(null_model, model))
print(aic)
print(summary(model))
#Capture AIC results
aic$species = sp
aic_ls_ht = rbind(aic_ls_ht, aic)
#Shapiro-Wilk test for testing if residuals are normally distributed
sw = shapiro.test(model[['residuals']])
#Do post-hoc test
ph = summary(glht(model, linfct = mcp(treatment='Tukey')))
print(ph)
g = ggpredict(model, terms = 'treatment')
#Capture posthoc test
phdf = as.data.frame(ph$test$coefficients)
phdf = cbind(coefficients = ph$test$coefficients, phdf)
phdf = cbind(comparison = rownames(phdf), phdf)
phdf = cbind(tstat = ph$test$tstat, phdf)
phdf = cbind(stderr = ph$test$sigma, phdf)
phdf = cbind(pvalues = ph$test$pvalues, phdf)
phdf$species = sp
ph_ls_ht = c(ph_ls_ht, list(phdf))
#Save figure of predicted biomass by treatment
g = ggpredict(model, terms = 'treatment')
plot(g) + labs(title = paste0(sp,' Predicted Biomass By Treatment'))
ggsave(paste0('./figures/',sp,'_predicted_bmass.jpg'), width=12, height=10)
#Create dataframe from the results and append to list
cfs = as.data.frame(summary(model)$coefficients)
cfs = cbind(parameter = rownames(cfs), cfs)
cfs$species = sp
df_ls_ht = c(df_ls_ht, list(cfs))
print(sw)
#Plot test on residuals and save
png(filename=sprintf('./figures/%s_residuals_check.jpg',sp), width=480, height=480)
cm = check_model(model)
plot(cm)
dev.off()
}
install.packages(c("lme4", "lmer", "lmerTest", "emmeans", "Matrix", "AICcmodavg", "dplyr", "performance", "broom.mixed", "pbkrtest", "multcomp", "ggeffects", "MuMIn", "data.tables"))
install.packages(c('lme4','lmer','lmerTest','emmeans','Matrix','AICcmodavg','dplyr',
'performance','broom.mixed','pbkrtest','multcomp','ggeffects','MuMIn','data.tables'))
setwd("C:/Users/sfari/OneDrive/Documents/GitHub/co2_growth_experiment")
library(lmerTest)
library(AICcmodavg)
library(broom.mixed)
library(performance)
library(emmeans)
library(multcomp)
library(ggeffects)
library(ggplot2)
library(MuMIn)
library(data.table)
library(dplyr)
library(performance)
## NOTE: AIC models must be fit using ML method
#Import data for herbs
ht  = read.csv('./data/herb_transplants_model_rdy.csv')
ht['total_biomass_log'] = log10(ht['total_biomass'])
#Run model for each species
species = c('MIGU','NAOF','POMO','VEAN')
#species = c('NAOF')
ht[,'treatment'] <- as.factor(ht[,'treatment'])
#Lists to catch all the model results dfs
df_ls_ht = list()
aic_ls_ht = list()
ph_ls_ht = list()
for (sp in species) {
print('')
print('********************')
print('Running:')
print(sp)
df = subset(ht, species == sp)
#Set up null model with only an intercept
null_model = lm('total_biomass_log ~ 1', data = df)
#Set up model with treatment as factor
model = lm('total_biomass_log ~ treatment', data = df)
#plot(model)
#Print model results
aic = as.data.frame(compare_performance(null_model, model))
print(aic)
print(summary(model))
#Capture AIC results
aic$species = sp
aic_ls_ht = rbind(aic_ls_ht, aic)
#Shapiro-Wilk test for testing if residuals are normally distributed
sw = shapiro.test(model[['residuals']])
#Do post-hoc test
ph = summary(glht(model, linfct = mcp(treatment='Tukey')))
print(ph)
g = ggpredict(model, terms = 'treatment')
#Capture posthoc test
phdf = as.data.frame(ph$test$coefficients)
phdf = cbind(coefficients = ph$test$coefficients, phdf)
phdf = cbind(comparison = rownames(phdf), phdf)
phdf = cbind(tstat = ph$test$tstat, phdf)
phdf = cbind(stderr = ph$test$sigma, phdf)
phdf = cbind(pvalues = ph$test$pvalues, phdf)
phdf$species = sp
ph_ls_ht = c(ph_ls_ht, list(phdf))
#Save figure of predicted biomass by treatment
g = ggpredict(model, terms = 'treatment')
plot(g) + labs(title = paste0(sp,' Predicted Biomass By Treatment'))
ggsave(paste0('./figures/',sp,'_predicted_bmass.jpg'), width=12, height=10)
#Create dataframe from the results and append to list
cfs = as.data.frame(summary(model)$coefficients)
cfs = cbind(parameter = rownames(cfs), cfs)
cfs$species = sp
df_ls_ht = c(df_ls_ht, list(cfs))
print(sw)
#Plot test on residuals and save
png(filename=sprintf('./figures/%s_residuals_check.jpg',sp), width=1000, height=800)
cm = check_model(model)
plot(cm)
dev.off()
}
install.packages(c("lme4", "lmer", "lmerTest", "emmeans", "Matrix", "AICcmodavg", "dplyr", "performance", "broom.mixed", "pbkrtest", "multcomp", "ggeffects", "MuMIn", "data.tables"))
install.packages(c('lme4','lmer','lmerTest','emmeans','Matrix','AICcmodavg','dplyr',
'performance','broom.mixed','pbkrtest','multcomp','ggeffects','MuMIn','data.tables'))
setwd("C:/Users/sfari/OneDrive/Documents/GitHub/co2_growth_experiment")
library(lmerTest)
library(AICcmodavg)
library(broom.mixed)
library(performance)
library(emmeans)
library(multcomp)
library(ggeffects)
library(ggplot2)
library(MuMIn)
library(data.table)
library(dplyr)
library(performance)
## NOTE: AIC models must be fit using ML method
#Import data for herbs
ht  = read.csv('./data/herb_transplants_model_rdy.csv')
ht['total_biomass_log'] = log10(ht['total_biomass'])
#Run model for each species
species = c('MIGU','NAOF','POMO','VEAN')
#species = c('NAOF')
ht[,'treatment'] <- as.factor(ht[,'treatment'])
#Lists to catch all the model results dfs
df_ls_ht = list()
aic_ls_ht = list()
ph_ls_ht = list()
for (sp in species) {
print('')
print('********************')
print('Running:')
print(sp)
df = subset(ht, species == sp)
#Set up null model with only an intercept
null_model = lm('total_biomass_log ~ 1', data = df)
#Set up model with treatment as factor
model = lm('total_biomass_log ~ treatment', data = df)
#plot(model)
#Print model results
aic = as.data.frame(compare_performance(null_model, model))
print(aic)
print(summary(model))
#Capture AIC results
aic$species = sp
aic_ls_ht = rbind(aic_ls_ht, aic)
#Shapiro-Wilk test for testing if residuals are normally distributed
sw = shapiro.test(model[['residuals']])
#Do post-hoc test
ph = summary(glht(model, linfct = mcp(treatment='Tukey')))
print(ph)
g = ggpredict(model, terms = 'treatment')
#Capture posthoc test
phdf = as.data.frame(ph$test$coefficients)
phdf = cbind(coefficients = ph$test$coefficients, phdf)
phdf = cbind(comparison = rownames(phdf), phdf)
phdf = cbind(tstat = ph$test$tstat, phdf)
phdf = cbind(stderr = ph$test$sigma, phdf)
phdf = cbind(pvalues = ph$test$pvalues, phdf)
phdf$species = sp
ph_ls_ht = c(ph_ls_ht, list(phdf))
#Save figure of predicted biomass by treatment
g = ggpredict(model, terms = 'treatment')
plot(g) + labs(title = paste0(sp,' Predicted Biomass By Treatment'))
ggsave(paste0('./figures/',sp,'_predicted_bmass.jpg'), width=12, height=10)
#Create dataframe from the results and append to list
cfs = as.data.frame(summary(model)$coefficients)
cfs = cbind(parameter = rownames(cfs), cfs)
cfs$species = sp
df_ls_ht = c(df_ls_ht, list(cfs))
print(sw)
#Plot test on residuals and save
png(filename=sprintf('./figures/%s_residuals_check.jpg',sp), width=900, height=800)
cm = check_model(model)
plot(cm)
dev.off()
}
install.packages(c("lme4", "lmer", "lmerTest", "emmeans", "Matrix", "AICcmodavg", "dplyr", "performance", "broom.mixed", "pbkrtest", "multcomp", "ggeffects", "MuMIn", "data.tables"))
